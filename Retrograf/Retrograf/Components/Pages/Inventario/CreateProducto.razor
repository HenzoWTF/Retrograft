@page "/CreateProducto"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@rendermode InteractiveServer
@inject ProductosServices productoService
@inject NavigationManager navigationManager
@inject NotificationService notificationServices
@* @attribute [Authorize(Roles = "Admin")] *@
<PageTitle>Productos</PageTitle>


<RadzenNotification />
<EditForm Model="@producto" OnValidSubmit="Guardar" FormName="Productos">
    <DataAnnotationsValidator />


    <h2 class="fw-bold mb-2 text-uppercase text-center">Crear producto</h2>
    <section class="vh-100 gradient-custom">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center">
                <div class="fondo col-lg-6 col-xl-6 " style="border-radius: 2rem;">

                    <div class="card-body p-5">

                        <div class="row tab-content">
                            <div class="mb-4">
                                <div>
                                    <h4 class="fw-bold mb-2 ">Nombre:</h4>
                                    <div class="input-group">
                                        <InputText id="nombre" class="form-control" @bind-Value="producto.Nombre" placeholder="Ej: Alcohol"></InputText>
                                        <ValidationMessage For="@(() => producto.Nombre)" />
                                    </div>
                                </div>
                                <div>
                                    <h4 class="fw-bold mb-2 ">Descripci&oacute;n:</h4>
                                    <div class="input-group">
                                        <InputTextArea id="descripcion" class="form-control" @bind-Value="producto.Descripcion" placeholder="Ej: Alcochol para pelo 70%"></InputTextArea>
                                        <ValidationMessage For="@(() => producto.Descripcion)"></ValidationMessage>
                                    </div>
                                </div>
                                <div>
                                    <h4 class="fw-bold mb-2 ">Precio Venta:</h4>
                                    <div class="input-group">
                                        <InputNumber id="precio" class="form-control" @bind-Value="producto.PrecioVenta"></InputNumber>
                                        <ValidationMessage For="@(() => producto.PrecioVenta)"></ValidationMessage>
                                    </div>
                                </div>
                                <div>
                                    <h4 class="fw-bold mb-2 ">Cantidad:</h4>
                                    <div class="input-group">
                                        <InputNumber id="Cantidad" class="form-control" @bind-Value="producto.Cantidad"></InputNumber>
                                        <ValidationMessage For="@(() => producto.Cantidad)"></ValidationMessage>
                                    </div>
                                </div>
                                <div>
                                    <h4 class="fw-bold mb-2 ">Precio Compra</h4>
                                    <div class="input-group">
                                        <InputNumber @bind-Value="@producto.PrecioCompra" class="form-control" />
                                        <ValidationMessage For="@(() => producto.PrecioCompra)" />
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex justify-content-center mt-3">
                                <button type="submit" class="w-20 btn btn-lg btn-success"><i class="bi bi-floppy"></i> Guardar</button>
                                <a href="/IndexProductos" class="w-20 btn btn-lg btn-primary ms-3"><i class="bi bi-arrow-left"></i> Cancelar</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</EditForm>

@code {
    public Productos producto = new Productos();

    public async Task Guardar()
    {
        var response = await productoService.PostProducto(producto);
        if (response != null)
        {
            var successMessage = new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado",
                Detail = "Producto guardado con éxito",
                Duration = 5000
            };
            notificationServices.Notify(successMessage);
            
            // Redirigir después de guardar
            navigationManager.NavigateTo("/IndexProductos");
        }
        else
        {
            var errorMessage = new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Error al guardar",
                Detail = "Ha ocurrido un error al guardar el producto",
                Duration = 5000
            };
            notificationServices.Notify(errorMessage);
        }
    }
}